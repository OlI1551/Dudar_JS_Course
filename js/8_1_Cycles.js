/* В языке JavaScript, как и в большинстве других языков,
существует 3 основных вида циклов.
Каждый из них выполняет одну и ту же роль,
но записывается по-разному. Рассмотрим все три цикла.

Цикл For
В цикле for все условия записываются в одном месте,
что очень удобно во многих случаях.
Стандартная запись такого цикла выглядит следующим образом: */

console.log("-------------Пример 1------------------------");
for (var i = 0; i < 10; i++)
	console.log(i);

/* В объявлении цикла записывается следующее:
переменная цикла, её начальное значение и диапазон.
В примере выше будут выведены числа от 0 до 10.

Если в теле цикла всего одна строка кода,
то фигурные скобки можно пропустить и не записывать их.

Цикл While
Суть цикла while не особо отличается от цикла for.
Единственное отличие заключается в способе записи цикла.
В while необходимо прописать лишь условие,
а все остальные параметры записываются вне цикла: */

console.log("-------------Пример 2------------------------");
var i = 1; // Создание переменной
while (i <= 10) { // Здесь только условие
	console.log(i);
	i++; // Увеличение переменной
}

/* Цикл Do While
Цикл схож с циклом while по форме написания,
но при этом работает немного по-другому.
Цикл do..while будет выполнен один раз сто процентов,
а дальше проверит условие и если оно верно, то цикл будет выполняться дальше: */

console.log("-------------Пример 3------------------------");
var x = 13;
do {
	x--;
	console.log(x);
} while (x > 10);

/* Как видно из примера, цикл изначально неверный,
но это не мешает ему сработать один раз.

Операторы для работы в циклах
Существует три основных оператора для работы в циклах:

Оператор break - служит для выхода из цикла полностью;
Оператор continue - пропускает лишь одну итерацию и не выходит из цикла. */

console.log("-------------Пример 4------------------------");
for (var i = 100; i > 5; i/= 2) {
    console.log(i);
}

console.log("-------------Пример 5------------------------");
var j = 10;
while (j <= 10) {
    console.log(j);
    j++;
}

console.log("-------------Пример 6------------------------");
var n = 1000;
while (n >= 100) {
    console.log(n);
    n -= 100;
}

// var isHasCar = true;
// while (isHasCar) {} // бесконечный цикл

console.log("-------------Пример 7------------------------");
var x = 100;
do {
    console.log(x);
    x++;
} while (x < 50); // 100% выполнится 1 раз 


// Операторы
console.log("-------------Пример 8------------------------");
for (var y = 10; y <=20; y += 2) {
    if (y > 15)
        break; // если 1 строка кода, можно фигурные скобки не ставить  
    console.log(y);
}

console.log("-------------Пример 9------------------------");
for (var z = 1; z <=20; z++) {
    if (z % 2 == 0)
        continue; // перейдет к следующей итерации, четные числа не выведет  
    console.log(y);
}

console.log("-------------Пример 10------------------------");
var arr = [5, 3, 7, 8, 9, "stroka"];
for (var a = 0; a < arr.length; a++) {
    arr[a] *= 2;
    console.log("Элемент " + (a + 1) + ": " + arr[a]);
}

