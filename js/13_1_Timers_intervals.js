/* В JavaScript есть две функции, которые позволяют вызывать другие функции
через определенное количество времени.


Использование интервалов
Интервалы записываются через метод setInterval().
Отличительная черта интервалов от таймеров заключается в способе вызова функции.
Интервалы вызывают функцию постоянно через определенное количество секунд.
Таймер вызывает функцию всего один раз, после чего прекращает свою работу.

Для создания интервалов используйте конструкцию:
// Будет вызвана функция someFunction через 1.5 секунды
setInterval("someFunction()", 1500);
function someFunction() {
	console.log("Функция срабатывает каждые 1,5 секунды");
}
Чтобы остановить интервал его необходимо записать в переменную, после чего очистить данные:
// Ссылка на интервал записывается в переменную
var linkInterval = setInterval("someFunction()", 1500);
function someFunction() {
	console.log("Функция срабатывает каждые 1,5 секунды");
	// Для остановки используйте метод clearInterval
	clearInterval(linkInterval);
}


Использование таймеров
Здесь схожая структура, только вот таймер не нужно очищать,
так как они срабатывают лишь один раз:

setTimeout("simple()", 1500);
function simple() {
	console.log("Функция будет вызвана лишь один раз через 1.5 секунды после старта программы");
}

За счёт этих функций вы можете откладывать выполнение других функций
на определенное количество времени. */

// setInterval(myFunc, 1000); // 1 сек = 1000 миллисекунд, вызов функции через интервал
// var counter = 0;
// function myFunc() {
// 	counter++;
// 	console.log("Counter: " + counter);
// }

// var counter = 0;
// setInterval(function() {
// 	counter++;
// 	console.log("Прошло секунд: " + counter);
// }, 1000);

var id = setInterval(myFunc, 1000);
var counter = 0;
function myFunc() {
	counter++;
	console.log("Counter: " + counter);

	if (counter == 3) {
		clearInterval(id);
	}
}
 
setTimeout(function() {
	console.log("Таймер работает - прошло 5 секунд!");
}, 5000);